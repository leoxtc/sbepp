// SPDX-License-Identifier: MIT
// Copyright (c) 2023, Oleksandr Koval

// This file was generated by sbeppc 1.3.0
#pragma once

#include <sbepp/sbepp.hpp>

SBEPP_WARNINGS_OFF();

#include "../schema/schema.hpp"


namespace bovespa_mbo_sbe
{
namespace detail
{
namespace types
{

enum class enum_26 : ::std::uint8_t
{
    TRADING_SESSION_CHANGE = 4,
    SECURITY_STATUS_CHANGE = 101,
    SECURITY_REJOINS_SECURITY_GROUP_STATUS = 102
};

template<typename Visitor>
SBEPP_CPP14_CONSTEXPR void tag_invoke(
    ::sbepp::detail::visit_tag, enum_26 e, Visitor& visitor) noexcept
{
    switch(e)
    {
    case enum_26::TRADING_SESSION_CHANGE:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::SecurityTradingEvent::TRADING_SESSION_CHANGE{});
        break;
    case enum_26::SECURITY_STATUS_CHANGE:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::SecurityTradingEvent::SECURITY_STATUS_CHANGE{});
        break;
    case enum_26::SECURITY_REJOINS_SECURITY_GROUP_STATUS:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::SecurityTradingEvent::SECURITY_REJOINS_SECURITY_GROUP_STATUS{});
        break;
    default:
        visitor.on_enum_value(e, ::sbepp::unknown_enum_value_tag{});
    }
}


} // namespace types
} // namespace detail

namespace types
{
using SecurityTradingEvent = ::bovespa_mbo_sbe::detail::types::enum_26;
} // namespace types
} // namespace bovespa_mbo_sbe

namespace sbepp
{

template<>
class enum_traits<::bovespa_mbo_sbe::schema::types::SecurityTradingEvent>
{
public:
    static constexpr const char* name() noexcept
    {
        return "SecurityTradingEvent";
    }

    static constexpr const char* description() noexcept
    {
        return "Identifies an event related to a Trade. This tag is also used to mark when an instrument state is kept separate from the group phase, or when the instrument state follows the default group phase (stops having a separate, defined state).";
    }

    using encoding_type = ::std::uint8_t;
    
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    
    using value_type = ::bovespa_mbo_sbe::types::SecurityTradingEvent;
};

template<>
struct traits_tag<::bovespa_mbo_sbe::types::SecurityTradingEvent>
{
    using type = ::bovespa_mbo_sbe::schema::types::SecurityTradingEvent;
};


template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::SecurityTradingEvent::TRADING_SESSION_CHANGE>
{
public:
    static constexpr const char* name() noexcept
    {
        return "TRADING_SESSION_CHANGE";
    }

    static constexpr const char* description() noexcept
    {
        return "Change of Trading Session.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::SecurityTradingEvent value() noexcept
    {
        return ::bovespa_mbo_sbe::types::SecurityTradingEvent::TRADING_SESSION_CHANGE;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::SecurityTradingEvent::SECURITY_STATUS_CHANGE>
{
public:
    static constexpr const char* name() noexcept
    {
        return "SECURITY_STATUS_CHANGE";
    }

    static constexpr const char* description() noexcept
    {
        return "Security Status maintained separately from Group Status.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::SecurityTradingEvent value() noexcept
    {
        return ::bovespa_mbo_sbe::types::SecurityTradingEvent::SECURITY_STATUS_CHANGE;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::SecurityTradingEvent::SECURITY_REJOINS_SECURITY_GROUP_STATUS>
{
public:
    static constexpr const char* name() noexcept
    {
        return "SECURITY_REJOINS_SECURITY_GROUP_STATUS";
    }

    static constexpr const char* description() noexcept
    {
        return "Security Status following Group Status.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::SecurityTradingEvent value() noexcept
    {
        return ::bovespa_mbo_sbe::types::SecurityTradingEvent::SECURITY_REJOINS_SECURITY_GROUP_STATUS;
    }
};

}  // namespace sbepp

SBEPP_WARNINGS_ON();
