// SPDX-License-Identifier: MIT
// Copyright (c) 2023, Oleksandr Koval

// This file was generated by sbeppc 1.3.0
#pragma once

#include <sbepp/sbepp.hpp>

SBEPP_WARNINGS_OFF();

#include "../schema/schema.hpp"


namespace bovespa_mbo_sbe
{
namespace detail
{
namespace types
{

enum class enum_18 : char
{
    ADD = 'A',
    DELETE = 'D',
    MODIFY = 'M'
};

template<typename Visitor>
SBEPP_CPP14_CONSTEXPR void tag_invoke(
    ::sbepp::detail::visit_tag, enum_18 e, Visitor& visitor) noexcept
{
    switch(e)
    {
    case enum_18::ADD:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::SecurityUpdateAction::ADD{});
        break;
    case enum_18::DELETE:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::SecurityUpdateAction::DELETE{});
        break;
    case enum_18::MODIFY:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::SecurityUpdateAction::MODIFY{});
        break;
    default:
        visitor.on_enum_value(e, ::sbepp::unknown_enum_value_tag{});
    }
}


} // namespace types
} // namespace detail

namespace types
{
using SecurityUpdateAction = ::bovespa_mbo_sbe::detail::types::enum_18;
} // namespace types
} // namespace bovespa_mbo_sbe

namespace sbepp
{

template<>
class enum_traits<::bovespa_mbo_sbe::schema::types::SecurityUpdateAction>
{
public:
    static constexpr const char* name() noexcept
    {
        return "SecurityUpdateAction";
    }

    static constexpr const char* description() noexcept
    {
        return "Action used when updating the security.";
    }

    using encoding_type = char;
    
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    
    using value_type = ::bovespa_mbo_sbe::types::SecurityUpdateAction;
};

template<>
struct traits_tag<::bovespa_mbo_sbe::types::SecurityUpdateAction>
{
    using type = ::bovespa_mbo_sbe::schema::types::SecurityUpdateAction;
};


template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::SecurityUpdateAction::ADD>
{
public:
    static constexpr const char* name() noexcept
    {
        return "ADD";
    }

    static constexpr const char* description() noexcept
    {
        return "Add.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::SecurityUpdateAction value() noexcept
    {
        return ::bovespa_mbo_sbe::types::SecurityUpdateAction::ADD;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::SecurityUpdateAction::DELETE>
{
public:
    static constexpr const char* name() noexcept
    {
        return "DELETE";
    }

    static constexpr const char* description() noexcept
    {
        return "Delete.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::SecurityUpdateAction value() noexcept
    {
        return ::bovespa_mbo_sbe::types::SecurityUpdateAction::DELETE;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::SecurityUpdateAction::MODIFY>
{
public:
    static constexpr const char* name() noexcept
    {
        return "MODIFY";
    }

    static constexpr const char* description() noexcept
    {
        return "Modify.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::SecurityUpdateAction value() noexcept
    {
        return ::bovespa_mbo_sbe::types::SecurityUpdateAction::MODIFY;
    }
};

}  // namespace sbepp

SBEPP_WARNINGS_ON();
