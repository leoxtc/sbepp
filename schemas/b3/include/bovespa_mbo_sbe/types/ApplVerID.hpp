// SPDX-License-Identifier: MIT
// Copyright (c) 2023, Oleksandr Koval

// This file was generated by sbeppc 1.3.0
#pragma once

#include <sbepp/sbepp.hpp>

SBEPP_WARNINGS_OFF();

#include "../schema/schema.hpp"


namespace bovespa_mbo_sbe
{
namespace detail
{
namespace types
{

enum class enum_6 : ::std::uint8_t
{
    FIX27 = 0,
    FIX30 = 1,
    FIX40 = 2,
    FIX41 = 3,
    FIX42 = 4,
    FIX43 = 5,
    FIX44 = 6,
    FIX50 = 7,
    FIX50SP1 = 8,
    FIX50SP2 = 9
};

template<typename Visitor>
SBEPP_CPP14_CONSTEXPR void tag_invoke(
    ::sbepp::detail::visit_tag, enum_6 e, Visitor& visitor) noexcept
{
    switch(e)
    {
    case enum_6::FIX27:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::ApplVerID::FIX27{});
        break;
    case enum_6::FIX30:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::ApplVerID::FIX30{});
        break;
    case enum_6::FIX40:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::ApplVerID::FIX40{});
        break;
    case enum_6::FIX41:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::ApplVerID::FIX41{});
        break;
    case enum_6::FIX42:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::ApplVerID::FIX42{});
        break;
    case enum_6::FIX43:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::ApplVerID::FIX43{});
        break;
    case enum_6::FIX44:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::ApplVerID::FIX44{});
        break;
    case enum_6::FIX50:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::ApplVerID::FIX50{});
        break;
    case enum_6::FIX50SP1:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::ApplVerID::FIX50SP1{});
        break;
    case enum_6::FIX50SP2:
        visitor.on_enum_value(e, ::bovespa_mbo_sbe::schema::types::ApplVerID::FIX50SP2{});
        break;
    default:
        visitor.on_enum_value(e, ::sbepp::unknown_enum_value_tag{});
    }
}


} // namespace types
} // namespace detail

namespace types
{
using ApplVerID = ::bovespa_mbo_sbe::detail::types::enum_6;
} // namespace types
} // namespace bovespa_mbo_sbe

namespace sbepp
{

template<>
class enum_traits<::bovespa_mbo_sbe::schema::types::ApplVerID>
{
public:
    static constexpr const char* name() noexcept
    {
        return "ApplVerID";
    }

    static constexpr const char* description() noexcept
    {
        return "Specifies the service pack release being applied at message level.";
    }

    using encoding_type = ::std::uint8_t;
    
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    
    using value_type = ::bovespa_mbo_sbe::types::ApplVerID;
};

template<>
struct traits_tag<::bovespa_mbo_sbe::types::ApplVerID>
{
    using type = ::bovespa_mbo_sbe::schema::types::ApplVerID;
};


template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::ApplVerID::FIX27>
{
public:
    static constexpr const char* name() noexcept
    {
        return "FIX27";
    }

    static constexpr const char* description() noexcept
    {
        return "FIX 2.7.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::ApplVerID value() noexcept
    {
        return ::bovespa_mbo_sbe::types::ApplVerID::FIX27;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::ApplVerID::FIX30>
{
public:
    static constexpr const char* name() noexcept
    {
        return "FIX30";
    }

    static constexpr const char* description() noexcept
    {
        return "FIX 3.0.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::ApplVerID value() noexcept
    {
        return ::bovespa_mbo_sbe::types::ApplVerID::FIX30;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::ApplVerID::FIX40>
{
public:
    static constexpr const char* name() noexcept
    {
        return "FIX40";
    }

    static constexpr const char* description() noexcept
    {
        return "FIX 4.0.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::ApplVerID value() noexcept
    {
        return ::bovespa_mbo_sbe::types::ApplVerID::FIX40;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::ApplVerID::FIX41>
{
public:
    static constexpr const char* name() noexcept
    {
        return "FIX41";
    }

    static constexpr const char* description() noexcept
    {
        return "FIX 4.1.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::ApplVerID value() noexcept
    {
        return ::bovespa_mbo_sbe::types::ApplVerID::FIX41;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::ApplVerID::FIX42>
{
public:
    static constexpr const char* name() noexcept
    {
        return "FIX42";
    }

    static constexpr const char* description() noexcept
    {
        return "FIX 4.2.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::ApplVerID value() noexcept
    {
        return ::bovespa_mbo_sbe::types::ApplVerID::FIX42;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::ApplVerID::FIX43>
{
public:
    static constexpr const char* name() noexcept
    {
        return "FIX43";
    }

    static constexpr const char* description() noexcept
    {
        return "FIX 4.3.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::ApplVerID value() noexcept
    {
        return ::bovespa_mbo_sbe::types::ApplVerID::FIX43;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::ApplVerID::FIX44>
{
public:
    static constexpr const char* name() noexcept
    {
        return "FIX44";
    }

    static constexpr const char* description() noexcept
    {
        return "FIX 4.4.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::ApplVerID value() noexcept
    {
        return ::bovespa_mbo_sbe::types::ApplVerID::FIX44;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::ApplVerID::FIX50>
{
public:
    static constexpr const char* name() noexcept
    {
        return "FIX50";
    }

    static constexpr const char* description() noexcept
    {
        return "FIX 5.0.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::ApplVerID value() noexcept
    {
        return ::bovespa_mbo_sbe::types::ApplVerID::FIX50;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::ApplVerID::FIX50SP1>
{
public:
    static constexpr const char* name() noexcept
    {
        return "FIX50SP1";
    }

    static constexpr const char* description() noexcept
    {
        return "FIX 5.0 SP1.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::ApplVerID value() noexcept
    {
        return ::bovespa_mbo_sbe::types::ApplVerID::FIX50SP1;
    }
};

template<>
class enum_value_traits<::bovespa_mbo_sbe::schema::types::ApplVerID::FIX50SP2>
{
public:
    static constexpr const char* name() noexcept
    {
        return "FIX50SP2";
    }

    static constexpr const char* description() noexcept
    {
        return "FIX 5.0 SP2.";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    

    static constexpr ::bovespa_mbo_sbe::types::ApplVerID value() noexcept
    {
        return ::bovespa_mbo_sbe::types::ApplVerID::FIX50SP2;
    }
};

}  // namespace sbepp

SBEPP_WARNINGS_ON();
