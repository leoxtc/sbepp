// SPDX-License-Identifier: MIT
// Copyright (c) 2023, Oleksandr Koval

// This file was generated by sbeppc 1.3.0
#pragma once

#include <sbepp/sbepp.hpp>

SBEPP_WARNINGS_OFF();

#include "../schema/schema.hpp"


namespace bovespa_mbo_sbe
{
namespace detail
{
namespace types
{

using type_78 = ::sbepp::detail::static_array_ref<
    const char, char, 4, ::bovespa_mbo_sbe::schema::types::SecurityExchangeBVMF>;

} // namespace types
} // namespace detail

namespace types
{
using SecurityExchangeBVMF = ::bovespa_mbo_sbe::detail::types::type_78;
} // namespace types
} // namespace bovespa_mbo_sbe

namespace sbepp
{

template<>
class type_traits<::bovespa_mbo_sbe::schema::types::SecurityExchangeBVMF>
{
public:
    static constexpr const char* name() noexcept
    {
        return "SecurityExchangeBVMF";
    }

    static constexpr const char* description() noexcept
    {
        return "Security Exchange Code (constant BVMF).";
    }

    static constexpr field_presence presence() noexcept
    {
        return ::sbepp::field_presence::constant;
    }

    using primitive_type = char;
    
    
    static constexpr length_t length() noexcept
    {
        return 4;
    }
    
    
    
    static constexpr const char* semantic_type() noexcept
    {
        return "Exchange";
    }
    
    static constexpr version_t since_version() noexcept
    {
        return 0;
    }

    static constexpr const char* character_encoding() noexcept
    {
        return "ASCII";
    }

    
    using value_type = ::bovespa_mbo_sbe::types::SecurityExchangeBVMF;
};



}  // namespace sbepp

SBEPP_WARNINGS_ON();
